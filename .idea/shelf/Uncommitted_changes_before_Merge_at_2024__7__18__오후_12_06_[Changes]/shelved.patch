Index: src/com/team2/eduops/dbConn/util/ConnectionHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.team2.eduops.dbConn.util;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\n\n\n//\tsingleton 방식으로 db 연결 메소드 작성함\npublic class ConnectionHelper {\n\tprivate static Connection conn;\n\tprivate ConnectionHelper() { }\n\t\n\tpublic static Connection getConnection(String dsn) {\n\t\tif(conn != null) {\n\t\t\treturn conn;\n\t\t}\n\t\t\n\t\ttry {\n\t\t\tif(dsn.equalsIgnoreCase(\"oracle\")) {\n\t\t\t\tClass.forName(\"oracle.jdbc.OracleDriver\");\n\t\t\t\tconn = DriverManager.getConnection(\"jdbc:oracle:thin:@localhost:1521:xe\", \"test\", \"oracle\");\n\t\t\t\t\t\t\n\t\t\t} else if(dsn.equalsIgnoreCase(\"mysql\")) {\n\t\t\t\tClass.forName(\"oracle.jdbc.OracleDriver\");\n\t\t\t\tconn = DriverManager.getConnection(\"jdbc:mysql://192.168.0.17:3306/SampleDB\", \"test\", \"oracle\");\n\t\t\t}\n\t\t} catch(Exception e) {\n\t\t\te.printStackTrace();\n\t\t} finally {\n\t\t\treturn conn;\n\t\t}\n\t}\n\t\n\t\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/team2/eduops/dbConn/util/ConnectionHelper.java b/src/com/team2/eduops/dbConn/util/ConnectionHelper.java
--- a/src/com/team2/eduops/dbConn/util/ConnectionHelper.java	(revision e64ec364a821037e0db8ec217f83767316e80246)
+++ b/src/com/team2/eduops/dbConn/util/ConnectionHelper.java	(date 1721271951395)
@@ -20,7 +20,7 @@
 				conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "test", "oracle");
 						
 			} else if(dsn.equalsIgnoreCase("mysql")) {
-				Class.forName("oracle.jdbc.OracleDriver");
+				Class.forName("com.mysql.jdbc.Driver");
 				conn = DriverManager.getConnection("jdbc:mysql://192.168.0.17:3306/SampleDB", "test", "oracle");
 			}
 		} catch(Exception e) {
Index: src/com/team2/eduops/model/VacationVO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.team2.eduops.model;\n\npublic class VacationVO {\n\t// 바뀌지 않을 테이블명 상수값 지정\n\tpublic final String ClassName = \"VACATION\";\n\n\t// Student 테이블의 컬럼명 필드로 선언\n\tprivate int vacate_code;\n\tprivate String vacate_date;\n\tprivate int std_no, adm_no;\n\tprivate String vacate_file;\n\n\t// 테이블명은 상수값이라 바뀌지 않으므로 setter 없이 getter만 생성\n\tpublic String getClassName() {\n\t\treturn ClassName;\n\t}\n\n\t// 필드들 getter/setter 생성\n\tpublic int getVacate_code() {\n\t\treturn vacate_code;\n\t}\n\n\tpublic void setVacate_code(int vacate_code) {\n\t\tthis.vacate_code = vacate_code;\n\t}\n\n\tpublic String getVacate_date() {\n\t\treturn vacate_date;\n\t}\n\n\tpublic void setVacate_date(String vacate_date) {\n\t\tthis.vacate_date = vacate_date;\n\t}\n\n\tpublic int getStd_no() {\n\t\treturn std_no;\n\t}\n\n\tpublic void setStd_no(int std_no) {\n\t\tthis.std_no = std_no;\n\t}\n\n\tpublic int getAdm_no() {\n\t\treturn adm_no;\n\t}\n\n\tpublic void setAdm_no(int adm_no) {\n\t\tthis.adm_no = adm_no;\n\t}\n\n\tpublic String getVacate_file() {\n\t\treturn vacate_file;\n\t}\n\n\tpublic void setVacate_file(String vacate_file) {\n\t\tthis.vacate_file = vacate_file;\n\t}\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/team2/eduops/model/VacationVO.java b/src/com/team2/eduops/model/VacationVO.java
--- a/src/com/team2/eduops/model/VacationVO.java	(revision e64ec364a821037e0db8ec217f83767316e80246)
+++ b/src/com/team2/eduops/model/VacationVO.java	(date 1721202974864)
@@ -19,7 +19,6 @@
 	public int getVacate_code() {
 		return vacate_code;
 	}
-
 	public void setVacate_code(int vacate_code) {
 		this.vacate_code = vacate_code;
 	}
@@ -27,7 +26,6 @@
 	public String getVacate_date() {
 		return vacate_date;
 	}
-
 	public void setVacate_date(String vacate_date) {
 		this.vacate_date = vacate_date;
 	}
