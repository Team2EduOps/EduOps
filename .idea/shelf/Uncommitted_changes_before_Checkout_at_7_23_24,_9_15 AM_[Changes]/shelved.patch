Index: src/com/team2/eduops/controller/AttendStudentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.team2.eduops.controller;\n\nimport java.sql.*;\n\nimport java.text.ParseException;\nimport java.util.Date;\nimport java.text.SimpleDateFormat;\nimport java.text.ParseException;\n\n//date형식으로 받아오기 위한 library\n\nimport com.team2.eduops.dbConn.util.*;\n\n//학생 출결 관리 관련 메소드들\npublic class AttendStudentController {\n    static SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\");\n    //근태 관리 메뉴 동작\n   public static void attendMenu(int stdno) throws ClassNotFoundException, SQLException, ParseException {\n        boolean backpage = true;\n        while (backpage) {\n            showAttendMenu();  // 메뉴 보이기\n            //메뉴 고르기\n            switch (ConnectController.scanIntData()) {\n                case -1:\n                    System.out.println(\"잘못된 입력값입니다. 다시 입력하여주세요.\");\n                    break;\n                case 0:\n                    System.out.println(\"뒤 페이지로 이동합니다.\");\n                    backpage = false;\n                    break;\n                case 1:\n                    System.out.println(\"일자별 근태 조회 페이지입니다.\");\n                    lookupDaily(stdno);\n                    break;\n\n                case 2:\n                    System.out.println(\"월별 근태 조회 페이지입니다.\");\n                    lookupMonthly(stdno);\n                    break;\n\n                case 3:\n                    System.out.println(\"누적 지원금 조회 페이지입니다.\");\n                    boolean backpage2 = true;\n                    while (backpage2) {\n                        showCashMenu();\n                        switch (ConnectController.scanIntData()) {\n                            case -1:\n                                System.out.println(\"잘못된 입력값입니다. 다시 입력하여주세요.\");\n                                break;\n                            case 0:\n                                System.out.println(\"뒤 페이지로 이동합니다.\");\n                                backpage2 = false;\n                                break;\n                            case 1:\n                                System.out.print(\"현재 누적 지원금:\");\n                                lookupCashPresent(stdno);\n                                break;\n                            case 2:\n                                System.out.println(\"월별 지원금 조회 페이지입니다.\");\n                                lookupCashPast(stdno);\n                                break;\n                            default:\n                                System.out.println(\"메뉴에 없는 번호를 선택하였습니다. 1~2번 중에서 선택하세요.\");\n                                break;\n                        }\n                    }//case 3 while end\n                    break;\n\n                case 4:\n                    System.out.println(\"휴가신청 페이지입니다.\");\n                    applyVacation(stdno);\n                    break;\n\n                default:\n                    System.out.println(\"메뉴에 없는 번호를 선택하셨습니다. 1~4번 중에서 선택하세요.\");\n                    break;\n            } //switch end\n        } // while end\n    }// atttendMenu end\n\n    //5.근태 관리 메뉴 :showAttendMenu\n    public static void showAttendMenu() {\n        System.out.println(\"\\n------5.근태관리-------\");\n        System.out.println(\"근태 관리 페이지입니다.\");\n        System.out.println(\"\\t 5-1. 일자별\");\n        System.out.println(\"\\t 5-2. 월별\");\n        System.out.println(\"\\t 5-3. 누적 지원금 조회\");\n        System.out.println(\"\\t 5-4. 휴가 신청\");\n        System.out.println(\"\\t 뒤 페이지 이동: 0\");\n        System.out.println(\"\\t >> 원하는 메뉴 선택 하세요.   \");\n    } //end\n\n    //5-3.누적 지원금 메뉴 : showCashMenu\n     public static void showCashMenu(){\n        System.out.println(\"\\n------5-3.누적 지원금 조회-------\");\n        System.out.println(\"누적 지원금 조회페이지입니다.\");\n        System.out.println(\"\\t 1. 현재 누적 지원금\");\n        System.out.println(\"\\t 2. 지난 지원금: 월별\");\n         System.out.println(\"\\t 뒤 페이지 이동: 0\");\n         System.out.println(\"\\t >> 원하는 메뉴 선택 하세요.   \");\n    }//end\n\n    //날짜 형식 맞는지 확인 메소드\n    private static boolean isValidDate(String dateString) {\n        if (dateString == null || dateString.isEmpty()) {\n            return false;\n        }\n        dateFormat.setLenient(false);\n        try {\n            dateFormat.parse(dateString);\n            return true;\n        } catch (ParseException e) {\n            return false;\n        }\n    }\n\n    //5-1. lookupDaily-일자별 조회(근태 page)\n    public static void lookupDaily(int stdno) throws ParseException, SQLException {\n        String inputDate;\n        boolean bool=true;\n        while (bool) {\n            System.out.print(\"\\t OOOO-OO-OO 형식에 맞춰 입력해주세요:\");\n            inputDate = ConnectController.scanData();\n\n            if (isValidDate(inputDate)) { //날짜형식에 맞다면!\n                String sql=(\"SELECT ATTEND_STATUS FROM ATTENDANCE WHERE TO_CHAR(ATTEND_DATE,'YYYY-MM-DD') = '\" + inputDate + \"' AND STD_NO = \" + stdno);\n                PreparedStatement pstmt = ConnectController.getPstmt(sql);\n                ResultSet rs = ConnectController.executePstmtQuery(pstmt);\n\n                //case1- DB에 없는 값, 튜플 X\n                if (!rs.isBeforeFirst()) {\n                    System.out.println(\"\\t 해당 날짜에 데이터가 없습니다.\");\n                } else {\n                    while (rs.next()) {\n                        Object columnValue = rs.getObject(\"Attend_status\");\n\n                        // case2-오늘 퇴실 처리 X ,튜플 O, 상태 X\n                        if (columnValue == null) {\n                            System.out.println(\"\\t 오늘은 퇴실 처리를 하지 않아 조회가 불가합니다.\");\n                            bool=false;\n                        }\n\n                        // case3- DB에 튜플 O, 상태 O\n                        int result = rs.getInt(\"Attend_status\");\n                        switch (result) {\n                            case 0: System.out.println(\"\\t \"+inputDate + \"날 결석하였습니다.\"); break;\n                            case 1: System.out.println(\"\\t \"+inputDate + \"날 출석하였습니다.\"); break;\n                            case 2: System.out.println(\"\\t \"+inputDate+ \"날 공가(출석)하였습니다.\"); break;\n                            case 3: System.out.println(\"\\t \"+inputDate + \"날 지각하였습니다.\"); break;\n                            case 4: System.out.println(\"\\t \"+inputDate + \"날 조퇴하였습니다.\"); break;\n                            default: break;\n                        }\n                        bool=false;\n                    }\n                }\n\n            }else {\n                System.out.println(\"\\t 올바른 형식이 아닙니다.. 다시 입력해 주세요.\");\n            }//if end\n            }\n        }//while end\n\n    //년 월 형식 맞는지 확인 메소드\n    public static boolean isValidYearMonth(String date){\n        final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat(\"yyyy-MM\");\n        final String DATE_PATTERN = \"yyyy-MM\";\n        try{\n            Date parseDate = DATE_FORMAT.parse(date);\n            return DATE_FORMAT.format(parseDate).equals(date);\n        }catch(ParseException e){\n            return false;\n        }\n    }\n\n    //5-2. 월별 조회(근태 page):lookupMonthly\n     public static void lookupMonthly(int stdno) throws SQLException {\n        boolean bool=true;\n         while(bool){\n             System.out.print(\"\\t YYYY-MM 형식 입력: \");\n             String inputMonth= ConnectController.scanData();\n\n             if(isValidYearMonth(inputMonth)){ //맞는 형식으로 입력!\n                 String firstdate=inputMonth+\"-01\";\n                 String lastdate=inputMonth+\"-31\";\n                 String sql = \"SELECT TO_CHAR(ATTEND_DATE,'YYYY-MM-DD') ,ATTEND_STATUS \" +\n                         \"FROM ATTENDANCE WHERE ATTEND_DATE BETWEEN TO_DATE('\" +firstdate+\"','YYYY-MM-DD') AND TO_DATE('\"+lastdate+\"','YYYY-MM-DD') \"+\n                         \"AND STD_NO = \"+stdno;\n\n                 PreparedStatement pstmt = ConnectController.getPstmt(sql);\n                 ResultSet rs = ConnectController.executePstmtQuery(pstmt);\n                 ResultSetMetaData metaData =rs.getMetaData();\n                 //case1- DB에 없는 값, 튜플 X\n                 if (!rs.isBeforeFirst()) {\n                     System.out.println(\"\\t 해당 월에 데이터가 없습니다.\");\n                 } else {\n                     System.out.println(\"\\t Attend_status= 0:결석,1:출석,2:공가,3:지각,4:조퇴\");\n                     while (rs.next()) {\n                         Object columnValue = rs.getObject(\"Attend_status\");\n                         // case2- DB에 튜플 O, 상태 O\n                             System.out.print(\"\\t 날짜: \" + rs.getString(1));\n                             System.out.println(\"\\t Attend_status: \" + rs.getInt(2));\n\n                             // case3-오늘 퇴실 처리 X ,튜플 O, 상태 X\n                             if (columnValue == null) {\n                                 System.out.println(\"\\t 오늘은 퇴실 처리를 하지 않아 조회가 불가합니다.\");\n                             } //if end\n                         }//for end\n                         bool = false;\n                     } //내부 while end\n                 }else System.out.println(\"\\t 올바른 형식이 아닙니다.. 다시 입력해 주세요.\");\n             }\n         }\n    //applyVacation- 휴가 신청(근태 page)\n\n    public static void applyVacation (int stdno){\n\n    }\n\n    //lookupCashPresent - 누적 지원금 조회(근태 page)\n    public static void lookupCashPresent (int stdno){\n\n    }\n\n    //lookupCashPast- 지난 누적 지원금 조회 월별(근태 page)\n    public static void lookupCashPast (int stdno){\n\n    }\n\n    public static void main(String[] args) throws SQLException, ParseException, ClassNotFoundException {\n     attendMenu(1);\n    }\n}\n\n\n\n\n
===================================================================
diff --git a/src/com/team2/eduops/controller/AttendStudentController.java b/src/com/team2/eduops/controller/AttendStudentController.java
--- a/src/com/team2/eduops/controller/AttendStudentController.java	
+++ b/src/com/team2/eduops/controller/AttendStudentController.java	
@@ -224,10 +224,6 @@
     //lookupCashPast- 지난 누적 지원금 조회 월별(근태 page)
     public static void lookupCashPast (int stdno){
 
-    }
-
-    public static void main(String[] args) throws SQLException, ParseException, ClassNotFoundException {
-     attendMenu(1);
     }
 }
 
